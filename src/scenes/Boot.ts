import { Keys, LevelMap } from './Levels';
import { EasyColor } from "../tools/EasyColor";
import { CENTER } from '../tools/Globals';

/**
 * Handles initial startup of game. Loads absolutely basic resources such as
 * loading bar graphics. (for display when loading OTHER resources) Manages
 * any configurations needed when Phaser starts.
 */
export class Boot extends Phaser.Scene {

    /**Creates instance of Scene */
    constructor() {
        super('Boot');
    }

    /**
     * Phaser.Scene method which represents the start of the Scene's behavior.
     * It runs after init() and preload() have completed
     */
    create() {
        // Add level scenes to the game object
        this.addLevels();
        // Create any assets generated by the game
        this.createAssets();
        // Start the next scene
        this.scene.start('LoadAssets');
    }

    /**
     * Some of our assets are made user Phaser and are not "loaded". These
     * need to be generated before use so we handle it here before the properly
     * loaded assets.
     */
    createAssets() {
        // Texture for the health bar mask
        let healthMaskTexture = new Phaser.GameObjects.Graphics(this)
            .fillStyle(EasyColor.dark_Violet, 1)
            .fillRoundedRect(0, 0, 150, 30, 15)
            .generateTexture('healthBarMask', 150, 30);
        let volumeBall = new Phaser.GameObjects.Graphics(this)
            .fillStyle(EasyColor.White,1)
            .fillCircle(15,15,15)
            .lineStyle(2.5, 0x000000, 1)
            .strokeCircle(15,15,15)
            .generateTexture("volumeball",30,30);
    }

    /**
     * Adds all the levels from the Levels module to the phaser game object
     */
    addLevels() {
        for (let key of Keys) {
            this.scene.add(key, LevelMap[key], false);
        }
    }
}